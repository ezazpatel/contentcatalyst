import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export interface BlogGenerationResult {
  title: string;
  content: string;
  description: string;
  seoMetaDescription: string;
}

export async function generateBlogContent(keywords: string[]): Promise<BlogGenerationResult> {
  try {
    const response = await openai.chat.completions.create({
      model: "o1-mini",
      messages: [{
        role: "user",
        content: `Write a blog post about ${keywords.join(", ")}. Include:
1. A catchy title
2. Main content (in markdown format)
3. A meta description for search results (max 155 characters)
4. A longer SEO-optimized description (max 320 characters) for Yoast SEO
Respond in JSON format with 'title', 'content', 'description' (short), and 'seoMetaDescription' (long) fields.`
      }],
      response_format: { 
        type: "text"  // Using text format as specified for o1-mini model
      },
      temperature: 1,
      max_completion_tokens: 2048,
      top_p: 1,
      frequency_penalty: 0,
      presence_penalty: 0
    });

    const content = response.choices[0].message.content;
    if (!content) {
      throw new Error('No content generated by AI');
    }

    try {
      return JSON.parse(content);
    } catch (error) {
      console.error('Failed to parse AI response as JSON:', error);
      console.log('Raw AI response:', content);
      
      // Instead of using potentially invalid content, return a structured error response
      return {
        title: 'Failed to Generate Title',
        content: '# Error Generating Content\n\nThe AI service encountered an error while generating content.',
        description: 'Content generation failed',
        seoMetaDescription: 'Content generation failed - please try regenerating this post'
      };
    }
  } catch (error) {
    console.error('Error calling OpenAI API:', error instanceof Error ? error.message : String(error));
    throw new Error('Failed to generate blog content: ' + (error instanceof Error ? error.message : 'Unknown error'));
  }
}

export default openai;
